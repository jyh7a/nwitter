{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","evnet","target","name","value","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","nweDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","get","nweetsArray","signOut","push","index","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.21872730.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGEING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (evnet) => {\r\n    const {\r\n      target: { name, value },\r\n    } = evnet;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create newAccount\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"emial\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Log In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {\r\n  faGithub,\r\n  faGoogle,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    const data = await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04aaff\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              onChange={onChange}\r\n              value={newNweet}\r\n              required\r\n              placeholder=\"Edit your nweet\"\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl}  alt=\"test\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={ faTrash } />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={ faPencilAlt } />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState, useEffect } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    await dbService.collection(\"nweets\").add({\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n          value={nweet}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add Photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n        onClick={(event) => {\r\n          event.target.value = null;\r\n        }}\r\n      />\r\n\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{ backgroundImage: attachment }}\r\n            alt=\"test\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { useState, useEffect } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const newArray = snapshot.docs.map((document) => ({\r\n          ...document.data(),\r\n          id: document.id,\r\n        }));\r\n        setNweets(newArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => {\r\n          return (\r\n            <Nweet\r\n              key={nweet.id}\r\n              nweetObj={nweet}\r\n              isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Nweet from \"components/Nweet\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  const history = useHistory();\r\n  const [nweDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== nweDisplayName) {\r\n      await userObj.updateProfile({ displayName: nweDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .get();\r\n\r\n    const nweetsArray = nweets.docs.map((doc) => {\r\n      return doc.data();\r\n    });\r\n\r\n    setNweets(nweetsArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={nweDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n\r\n      <div>\r\n        {nweets.map((nweet, index) => {\r\n          return (\r\n            <Nweet\r\n              key={index}\r\n              nweetObj={nweet}\r\n              isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation({ userObj }) {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04aaff\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04aaff\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile refreshUser={refreshUser} userObj={userObj} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <Route exact path=\"/\">\r\n              <Auth></Auth>\r\n            </Route>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
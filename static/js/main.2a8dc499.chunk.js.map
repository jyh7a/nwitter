{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","evnet","target","name","value","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","height","alt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","nweDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","get","nweetsArray","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2a8dc499.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGEING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (evnet) => {\r\n    const {\r\n      target: { name, value },\r\n    } = evnet;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create newAccount\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"emial\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Log In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    const data = await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value={newNweet} required />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} height=\"200px\" alt=\"test\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    await dbService.collection(\"nweets\").add({\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n          value={nweet}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        <input type=\"submit\" value=\"Nweet\" />\r\n        {attachment && (\r\n          <div>\r\n            <img src={attachment} height=\"250px\" alt=\"test\" />\r\n            <button onClick={onClearAttachment}>Clear</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { useState, useEffect } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const newArray = snapshot.docs.map((document) => ({\r\n          ...document.data(),\r\n          id: document.id,\r\n        }));\r\n        setNweets(newArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => {\r\n          return (\r\n            <Nweet\r\n              key={nweet.id}\r\n              nweetObj={nweet}\r\n              isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Nweet from \"components/Nweet\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  const history = useHistory();\r\n  const [nweDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== nweDisplayName) {\r\n      await userObj.updateProfile({ displayName: nweDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .get();\r\n\r\n    const nweetsArray = nweets.docs.map((doc) => {\r\n      return doc.data();\r\n    });\r\n\r\n    setNweets(nweetsArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={nweDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n\r\n      <div>\r\n        {nweets.map((nweet) => {\r\n          return (\r\n            <Nweet\r\n              key={nweet.id}\r\n              nweetObj={nweet}\r\n              isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation({ userObj }) {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth></Auth>\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}